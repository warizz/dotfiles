# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'.js':
  'Add /* GraphQL */ tag':
    'prefix': 'gqlt'
    'body': '/* GraphQL */ '

'.jsx':
  'React/Init a new component':
    'prefix':'rinc'
    'body': """
    import React from 'react';
    import PropTypes from 'prop-types';

    class $1 extends React.Component {
      render () {
        return (
          <div>$1</div>
        )
      }
    }

    export default $1;
    """

  'React/Init a new component with Flow':
    'prefix':'rincf'
    'body': """
    // @flow
    import * as React from 'react';

    type Props = {};

    type State = {};

    class $1 extends React.Component<Props, State> {
      render() {
        return <div>$1</div>;
      }
    }

    export default $1;
    """

  'React/PropTypes.bool':
    'prefix': 'rptb'
    'body': 'PropTypes.bool'

  'React/PropTypes.func':
    'prefix': 'rptf'
    'body': 'PropTypes.func'

  'React/PropTypes.string':
    'prefix': 'rpts'
    'body': 'PropTypes.string'

  'React/PropTypes.shape':
    'prefix': 'rptshp'
    'body': """
    PropTypes.shape({
      $1
    })
    """

  'React/PropTypes.arrayOf':
    'prefix': 'rpta'
    'body': 'PropTypes.arrayOf($1)'

  'add flow notation':
    'prefix': 'flow'
    'body': '// @flow\n'
